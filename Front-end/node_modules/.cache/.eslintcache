[{"D:\\GitHub\\hwaseon\\Front-end\\src\\index.js":"1","D:\\GitHub\\hwaseon\\Front-end\\src\\App.js":"2","D:\\GitHub\\hwaseon\\Front-end\\src\\reportWebVitals.js":"3","D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Footer.js":"4","D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Header.js":"5","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\KeyCat.js":"6","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\BlogTrack.js":"7","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\MassKey.js":"8","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\Home.js":"9","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\ItemTrack.js":"10","D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Navibar\\Navigation.js":"11","D:\\GitHub\\hwaseon\\Front-end\\src\\api.js":"12","D:\\GitHub\\hwaseon\\Front-end\\src\\components\\SearchBox.js":"13","D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Navibar\\Menuitems.js":"14","D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Container\\Page-4\\BlogTable.js":"15"},{"size":494,"mtime":1614431330297,"results":"16","hashOfConfig":"17"},{"size":1171,"mtime":1615297552997,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1614431330298,"results":"19","hashOfConfig":"17"},{"size":1039,"mtime":1614702076074,"results":"20","hashOfConfig":"17"},{"size":525,"mtime":1614702074313,"results":"21","hashOfConfig":"17"},{"size":1020,"mtime":1614843158980,"results":"22","hashOfConfig":"17"},{"size":8216,"mtime":1615455236862,"results":"23","hashOfConfig":"17"},{"size":2501,"mtime":1615320605134,"results":"24","hashOfConfig":"17"},{"size":1589,"mtime":1614694118969,"results":"25","hashOfConfig":"17"},{"size":11741,"mtime":1615469273178,"results":"26","hashOfConfig":"17"},{"size":940,"mtime":1614609951881,"results":"27","hashOfConfig":"17"},{"size":452,"mtime":1614431330290,"results":"28","hashOfConfig":"17"},{"size":385,"mtime":1614450094652,"results":"29","hashOfConfig":"17"},{"size":543,"mtime":1614682744188,"results":"30","hashOfConfig":"17"},{"size":978,"mtime":1615038450944,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1k41rts",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"D:\\GitHub\\hwaseon\\Front-end\\src\\index.js",[],["69","70"],"D:\\GitHub\\hwaseon\\Front-end\\src\\App.js",["71","72","73"],"import logo from './logo.svg';\r\nimport {HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navigation from \"./components/Navibar/Navigation\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\"\r\nimport Home from \"./routes/Home\";\r\nimport KeyCat from \"./routes/KeyCat\";\r\nimport ItemTrack from \"./routes/ItemTrack\";\r\nimport MassKey from \"./routes/MassKey\";\r\nimport BlogTrack from \"./routes/BlogTrack\";\r\n\r\n\r\nfunction App() {\r\n  return (    \r\n        <HashRouter>\r\n          <Switch>\r\n            <Route exact path = \"/\" exact = {true} component = {Home}/>\r\n            <Route>\r\n                <Header/>\r\n                <Navigation/> \r\n                <Route path = \"/keyncat\" exact = {true} component = {KeyCat}/>\r\n                <Route path = \"/itemtrack\" exact = {true} component = {ItemTrack}/>\r\n                <Route path = \"/masskeyword\" exact = {true} component = {MassKey} />\r\n                <Route path = \"/blogtrack\" exact = {true} component = {BlogTrack} />\r\n            </Route>\r\n          </Switch>         \r\n          <Footer/>\r\n        </HashRouter>\r\n  );  \r\n}\r\n\r\nexport default App;","D:\\GitHub\\hwaseon\\Front-end\\src\\reportWebVitals.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Footer.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Header.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\KeyCat.js",["74","75","76"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport SearchBox from '../components/SearchBox';\r\nimport \"./KeyCat.css\";\r\nimport {naverMoviesApi} from '../api';\r\n\r\nclass KeyCat extends React.Component{\r\n    state = {\r\n      isLoading: true,\r\n    };\r\n    \r\n    render() {\r\n  \r\n      return (\r\n          <div className = \"cat-container\">\r\n            <div className = \"cat-functions\">\r\n                <div className = \"cat-searchBox \"> \r\n                  <input className = \"cat-input\"\r\n                  type = \"searchbox\"s\r\n                  placeholder = \"검색할 키워드를 입력하세요\"\r\n                  onChange = {this.props.handleChange}/>\r\n                  <button type = \"submit\" className = \"cat-submit\">\r\n                    <i className = \"fa fa-search\"></i>\r\n                  </button>\r\n                </div>\r\n                <div className = \"monthly-search\">\r\n                </div>\r\n            </div>    \r\n          </div>\r\n            \r\n      );\r\n    }\r\n}\r\n\r\nexport default KeyCat;","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\BlogTrack.js",["77","78","79","80"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport \"./BlogTrack.css\";\r\n\r\nclass BlogTrack extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      isBlogPosted: false,\r\n      isKwdGen: false,\r\n      posts:[],\r\n      keylist: []\r\n    };\r\n  }\r\n\r\n  callBlogPostApi = async() => {\r\n    const search = this.state.value;\r\n    try{\r\n      if(search == \"\"){\r\n        this.setState({posts:[], isBlogPosted: false, isKwdGen: false})\r\n      } else {\r\n          this.setState({posts:[]});\r\n          axios.post(\"https://2oe7jwfo04.execute-api.us-east-1.amazonaws.com/v1/blogPost\",{\r\n              \"id\": search\r\n          },{\r\n            headers: {\r\n              'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Access-Control-Allow-Origin,  Access-Control-Allow-Methods, Access-Control-Allow-Credentials, Access-Control-Request-Headers',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Access-Control-Allow-Credentials':true}\r\n          }).then(function (response) {\r\n            this.setState({posts: JSON.parse(response[\"data\"][\"body\"]), isBlogPosted: true, isKwdGen: false});\r\n          }.bind(this));          \r\n        }\r\n      }\r\n      catch(error){\r\n          console.log(error);\r\n      }\r\n    };\r\n\r\n\r\n  callBlogKwdApi = async() => {\r\n    try{\r\n      if (!this.state.isBlogPosted){\r\n        console.log(\"No Posts\");\r\n      } else {\r\n        if(this.state.isKwdGen){\r\n          console.log(\"Keyword Already Generated\");\r\n        } else {\r\n            axios.post(\"https://2oe7jwfo04.execute-api.us-east-1.amazonaws.com/v1/blogKwdAuto\",{\r\n              \"body\": JSON.stringify(this.state.posts)\r\n          },{\r\n            headers: {\r\n              'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Access-Control-Allow-Origin,  Access-Control-Allow-Methods, Access-Control-Allow-Credentials, Access-Control-Request-Headers',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Access-Control-Allow-Credentials':true}\r\n          }).then(function (response) {\r\n            this.setState({posts: JSON.parse(response[\"data\"][\"body\"]), isBlogPosted: true, isKwdGen: true});\r\n            for(var i=0; i<this.state.posts.length; i++) {\r\n              this.state.keylist[i] = this.state.posts[i][\"keyword\"];\r\n            }\r\n          }.bind(this));  \r\n        } \r\n      }\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n  }\r\n\r\n  callBlogViewApi = async() => {\r\n    try{\r\n      if(!this.state.isKwdGen){\r\n        console.log(\"No Keyword generated\");\r\n      } else {\r\n        console.log(this.state.keylist);\r\n        for(var i=0; i<this.state.posts.length; i++) {\r\n          this.state.posts[i][\"keyword\"] = this.state.keylist[i];\r\n        }\r\n        axios.post(\"https://2oe7jwfo04.execute-api.us-east-1.amazonaws.com/v1/blogView\",{\r\n              \"keyword\": this.state.keylist,\r\n              \"body\": JSON.stringify(this.state.posts)\r\n          },{\r\n            headers: {\r\n              'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Access-Control-Allow-Origin, Access-Control-Allow-Methods, Access-Control-Allow-Credentials, Access-Control-Request-Headers',\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Access-Control-Allow-Credentials':true}\r\n          }).then(function (response) {\r\n            this.setState({posts: JSON.parse(response[\"data\"][\"body\"]), isBlogPosted: true, isKwdGen: true});\r\n          }.bind(this));  \r\n      }\r\n    }\r\n    catch(error){\r\n        console.log(error); \r\n    }\r\n  }\r\n\r\n  handleChange = (e) => { \r\n    this.setState({value: e.target.value}); \r\n  };\r\n    \r\n  handleSubmit = (e) => { \r\n    e.preventDefault(); \r\n    this.callBlogPostApi(); \r\n  };\r\n\r\n  handleKwdSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.callBlogKwdApi();\r\n  }\r\n\r\n  handleViewSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.callBlogViewApi();\r\n  }\r\n\r\n  onKwdChange = (index, e) => {\r\n    const items = {...this.state.keylist}\r\n    items[index] = e.target.value;\r\n    this.setState(\r\n      {\r\n          keylist: Object.values(items)\r\n      }\r\n    );\r\n  }\r\n\r\n  render() \r\n  { \r\n    const {posts, isLoading} = this.state;\r\n    const columns = [{  \r\n      Header: '글 제목 ▲',  \r\n      accessor: 'title',\r\n      },{  \r\n      Header: '키워드 ▲',  \r\n      accessor: 'keyword' ,\r\n      },{  \r\n      Header: 'View 순위 ▲',  \r\n      accessor: 'rank' ,\r\n      },{  \r\n      Header: '통합View 노출수 ▲',  \r\n      accessor: 'no_adview',\r\n      },{  \r\n      Header: 'Total 검색량 ▲',  \r\n      accessor: 'monthly_search',\r\n      },{  \r\n      Header: '컨텐츠 발행량 ▲',  \r\n      accessor: 'monthly_content',\r\n      }\r\n    ]\r\n    return (\r\n      <section className = \"blog-container\">\r\n          <div className = \"blog-content\">\r\n            <div className = \"blog-functions\">\r\n              <div className = \"blog-search\">\r\n                <form className = \"blog-searchBox \" onSubmit = {this.handleSubmit}> \r\n                  <div className = \"blog-classify\">블로그 ID</div> \r\n                  <input className = \"blog-input\"\r\n                  type = \"text\"\r\n                  placeholder = \"ex. dotoree0103\"\r\n                  value={this.state.value} onChange={this.handleChange}/>\r\n                  <button type = \"submit\" className = \"blog-submit\" onChange={this.handleChange}>\r\n                    <i className = \"fa fa-search\"></i>\r\n                  </button>\r\n                </form>\r\n                <div className=\"blog-buttons\">\r\n                  <button type = \"submit\" className = \"blog-keyauto\" onClick={this.handleKwdSubmit} onChange={this.handleKwdSubmit}>\r\n                    키워드 자동 생성 Click\r\n                  </button>\r\n                  <button type = \"submit\" className = \"blog-viewcheck\" onClick={this.handleViewSubmit}>\r\n                    View 순위 확인 Click\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            \r\n              <div className = \"blog-descript\">\r\n                <ul className = \"descript\">\r\n                  <li>\r\n                  1. 블로그ID에 'blog.naver.com/아이디' 해당값 입력 → 최신글 15개 가져와짐\r\n                  </li>\r\n                  <li>\r\n                  2. 키워드 자동 생성 or 직접 입력 후, 'View 순위 확인'을 Click → View 순위 노출 됨\r\n                  </li>\r\n                  <li>\r\n                  3. PC와 Mobile의 View 순위는 약간 상이합니다. Mobile 기준 작성했습니다.\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div className = \"blog-result\">\r\n        { \r\n          <table className=\"blog-table\"> \r\n            <tr className = \"blog-table-title\">\r\n              <th style = {{width:\"27%\", paddingLeft: \"55px\",textAlign: \"left\"}}>글 제목 ▲</th>\r\n              <th style = {{width:\"9%\"}}>키워드 ▲</th>\r\n              <th style = {{width:\"8%\"}}>View 순위 ▲</th>\r\n              <th style = {{width:\"9%\"}}>통합 View 노출수 ▲</th>\r\n              <th style = {{width:\"8%\"}}>Total 검색량 ▲</th>\r\n              <th style = {{width:\"11%\", paddingRight:\"50px\"}}>컨텐츠 발행량 ▲</th>\r\n            </tr>\r\n            { \r\n                this.state.posts.map((datum, index) =>\r\n                <tr className=\"trow\"> \r\n                <td style = {{width:\"27%\", paddingLeft: \"35px\",textAlign: \"left\"}}>{datum.title}</td>\r\n                <td>\r\n                  <textarea className = \"blog-keyInput\" defaultValue={datum.keyword}  onChange={(e) => this.onKwdChange(index, e)}/>\r\n                </td>\r\n                <td style = {{width:\"8%\"}}>{datum.rank > 30 ? \"30위 밖\":datum.rank}</td>\r\n                <td style = {{width:\"9%\"}}>{datum.no_adview}</td>\r\n                <td style = {{width:\"8%\"}}>{datum.monthly_search}</td>\r\n                <td style = {{width:\"11%\", paddingRight:\"50px\"}}>{datum.monthly_content}</td>\r\n                </tr>) \r\n            }\r\n          </table>        \r\n        }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogTrack;","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\MassKey.js",["81"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport \"./MassKey.css\";\r\n\r\nclass MassKey extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n  };\r\n\r\n  render() \r\n  {  \r\n    return (\r\n      <div className = \"key-container\">\r\n        <div className = \"key-functions\">\r\n          <div className = \"key-search\">\r\n            <div className = \"key-searchBox \"> \r\n              <div className = \"key-classify\">키워드 입력</div> \r\n              <input className = \"key-input\"\r\n              type = \"searchbox\"\r\n              placeholder = \"ex. 폼클렌징(엔터시, 누적)\"\r\n              onChange = {this.props.handleChange}/>\r\n              <button type = \"submit\" className = \"key-submit\">\r\n                <i className = \"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n            <div className = \"key-searchBox \"> \r\n              <div className = \"key-classify\">엑셀 업로드</div> \r\n              <input className = \"key-input\"\r\n              type = \"searchbox\"\r\n              placeholder = \"엑셀 파일 업로드\"\r\n              onChange = {this.props.handleChange}/>\r\n              <button type = \"submit\" className = \"key-submit\">\r\n                <i className = \"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"key-descript\">\r\n              <ul className = \"descript\">\r\n                <li>\r\n                엑셀 양식 다운로드 - 구글드라이브\r\n                </li>\r\n                <li>\r\n                세 가지 중 입력 중 하나 선택하셔서 사용하세요.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className = \"key-massSearch \"> \r\n                <div className = \"key-classify\">\r\n                    키워드 입력<br/>\r\n                    콤마 (구분)\r\n                    <button type = \"submit\" className = \"key-keyauto\">\r\n                      태그 자동 입력 click\r\n                    </button>\r\n                </div> \r\n                \r\n                <textarea className = \"key-massInput\"\r\n                type = \"searchbox\"\r\n                placeholder = \"ex) 샴푸, 탈모샴푸, 탈모에좋은샴푸, 향기좋은샴푸, 샴푸특가, 탈모샴푸1위, 두피샴푸,두피에좋은샴푸...\"\r\n                onChange = {this.props.handleChange}/>\r\n              </div> \r\n          </div>\r\n        </div>\r\n      // <div>\r\n        \r\n      // </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MassKey;","D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\Home.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\routes\\ItemTrack.js",["82","83","84","85","86"],"D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Navibar\\Navigation.js",["87"],"import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport {Menuitems} from \"./Menuitems\";\r\n\r\nclass Navigation extends React.Component{\r\n\r\n   state = {\r\n       clicked : false\r\n   }\r\n\r\n   handleClick = () => {\r\n       this.setState({clicked: !this.state.clicked});\r\n   }\r\n\r\n   render(){\r\n        return (\r\n            <nav className = \"nav-bar\">\r\n                <ul className = {this.state.clicked ? \"item-clicked\" : \"item-unclicked\" }>\r\n                    {Menuitems.map((item, index) => {\r\n                        return (\r\n                            <NavLink to = {item.path} key = {index} className = {item.cName}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                        )\r\n                    })}\r\n                    \r\n                </ul>\r\n            </nav>\r\n        );\r\n   }   \r\n}\r\n\r\nexport default Navigation;\r\n","D:\\GitHub\\hwaseon\\Front-end\\src\\api.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\components\\SearchBox.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Navibar\\Menuitems.js",[],"D:\\GitHub\\hwaseon\\Front-end\\src\\components\\Container\\Page-4\\BlogTable.js",[],["88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":2,"column":36,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":18,"column":37,"nodeType":"101","endLine":18,"endColumn":51},{"ruleId":"94","severity":1,"message":"102","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"103","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"104","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":20,"column":17,"nodeType":"107","messageId":"108","endLine":20,"endColumn":19},{"ruleId":"94","severity":1,"message":"109","line":129,"column":12,"nodeType":"96","messageId":"97","endLine":129,"endColumn":17},{"ruleId":"94","severity":1,"message":"110","line":129,"column":19,"nodeType":"96","messageId":"97","endLine":129,"endColumn":28},{"ruleId":"94","severity":1,"message":"111","line":130,"column":11,"nodeType":"96","messageId":"97","endLine":130,"endColumn":18},{"ruleId":"94","severity":1,"message":"102","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"102","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":79,"column":49,"nodeType":"107","messageId":"108","endLine":79,"endColumn":51},{"ruleId":"105","severity":1,"message":"106","line":79,"column":90,"nodeType":"107","messageId":"108","endLine":79,"endColumn":92},{"ruleId":"105","severity":1,"message":"106","line":96,"column":39,"nodeType":"107","messageId":"108","endLine":96,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":96,"column":80,"nodeType":"107","messageId":"108","endLine":96,"endColumn":82},{"ruleId":"94","severity":1,"message":"112","line":3,"column":18,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"90","replacedBy":"113"},{"ruleId":"92","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'axios' is defined but never used.","'SearchBox' is defined but never used.","'naverMoviesApi' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'posts' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'columns' is assigned a value but never used.","'useLocation' is defined but never used.",["115"],["116"],"no-global-assign","no-unsafe-negation"]